<Project Sdk="Microsoft.NET.Sdk.Web">
    <!-- Information -->
    <PropertyGroup>

        <!-- Language and Framework -->
        <LangVersion>latest</LangVersion>
        <TargetFramework>netcoreapp3.1</TargetFramework>

        <!-- Document File -->
        <IncludeOpenAPIAnalyzers>true</IncludeOpenAPIAnalyzers>
        <DocumentationFile>Goblin.Ui_Base.xml</DocumentationFile>
        <NoWarn>1701;1702;1705;1591</NoWarn>

        <!-- UI -->
        <AddRazorSupportForMvc>true</AddRazorSupportForMvc>
        <EnableDefaultContentItems>false</EnableDefaultContentItems>
        
        <!-- Mvc Razor Issue to prevent build *.Views.dll, https://github.com/dotnet/aspnetcore/issues/16688-->
        <MvcRazorCompileOnPublish>true</MvcRazorCompileOnPublish>
        <MvcRazorCompileOnBuild>true</MvcRazorCompileOnBuild>
        <RazorCompileOnPublish>true</RazorCompileOnPublish>
        <RazorCompileOnBuild>true</RazorCompileOnBuild>
        
        <!-- 
            As far as I know, this is primarily used for Razor pages. 
            They are compiled at runtime, and the compiler needs access to reference assemblies, to make sure it compiles correctly. 
            So, to use Razor pages, you need to set preserveCompilationContext, which then includes all the necessary files in the published output.
            If you don't need runtime compilation, you don't have to set preserveCompilationContext.
        -->
        <PreserveCompilationContext>true</PreserveCompilationContext>

        <!-- Output -->
        <OutputPath>.\bin\</OutputPath>
        <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
        <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    </PropertyGroup>
    <!-- Copy to Output -->
    <ItemGroup>
        <Content Include="Goblin.Ui_Base.xml;appsettings.json">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>

        <!-- UI -->
        <!-- No need to copy Views folder to Build/Publish due to it will Complied by the above config -->
<!--        <Content Include="Views\**\*">-->
<!--            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>-->
<!--        </Content>-->
        <Content Include="wwwroot\**\*">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Remove="wwwroot\**\*.scss" />
        <Content Remove="wwwroot\node_modules\**\*" />
    </ItemGroup>
    <ItemGroup>
        <ProjectReference Include="..\..\..\Goblin.Core\Goblin.Core.Web\Goblin.Core.Web.csproj" />
        
        <ProjectReference Include="..\..\Cross\Goblin.Ui_Base.Core\Goblin.Ui_Base.Core.csproj" />
        <ProjectReference Include="..\..\Cross\Goblin.Ui_Base.Mapper\Goblin.Ui_Base.Mapper.csproj" />
        
        <ProjectReference Include="..\..\Service\Goblin.Ui_Base.Contract.Service\Goblin.Ui_Base.Contract.Service.csproj" />
        <ProjectReference Include="..\..\Service\Goblin.Ui_Base.Service\Goblin.Ui_Base.Service.csproj" />
        
        <ProjectReference Include="..\..\Repository\Goblin.Ui_Base.Contract.Repository\Goblin.Ui_Base.Contract.Repository.csproj" />
        <ProjectReference Include="..\..\Repository\Goblin.Ui_Base.Repository\Goblin.Ui_Base.Repository.csproj" />
    </ItemGroup>
</Project>